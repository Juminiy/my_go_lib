    ＜无符号整数＞  ::= ＜非零数字＞｛＜数字＞｝| 0
    ＜整数＞        ::= ［＋｜－］＜无符号整数＞
    "integer" : "INTCON",
    ＜字符串＞
	"string" : "STRCON",
	＜字符＞
	"charc" : "CHARCON",
	＜标识符＞
	"identifier" : "IDENFR",

    ＜加法运算符＞
    "-" : "MINU",
    "+" : "PLUS",
    ＜乘法运算符＞
    "*" : "MULT",
    "/" : "DIV",
    ＜关系运算符＞
    "<" : "LSS",
    "<=" : "LEQ",
    ">" : "GRE",
    ">=" : "GEQ",
    "==" : "EQL",
    "!=" : "NEQ",
	"=" : "ASSIGN",

	<分隔符>
	";" : "SEMICN",
	"," : "COMMA",
	"(" : "LPARENT",
	")" : "RPARENT",
	"[" : "LBRACK",
	"]" : "RBRACK",
	"{" : "LBRACE",
	"}" : "RBRACE",

    ＜类型标识符>
    "int" : "INTTK",
    "char" : "CHARTK",
    ＜常量定义＞   ::=   int＜标识符＞＝＜整数＞{,＜标识符＞＝＜整数＞}| char＜标识符＞＝＜字符＞{,＜标识符＞＝＜字符＞}
    ＜常量说明＞ ::=  const＜常量定义＞;{ const＜常量定义＞;}
    "const" : "CONSTTK",

    ＜变量定义＞  ::= ＜类型标识符＞(＜标识符＞|＜标识符＞'['＜无符号整数＞']'){,(＜标识符＞|＜标识符＞'['＜无符号整数＞']' )} //＜无符号整数＞表示数组元素的个数，其值需大于0
    ＜变量说明＞  ::= ＜变量定义＞;{＜变量定义＞;}


	＜读语句＞    ::=  scanf '('＜标识符＞{,＜标识符＞}')'
	"scanf" : "SCANFTK",
	＜写语句＞    ::= printf '(' ＜字符串＞,＜表达式＞ ')'| printf '('＜字符串＞ ')'| printf '('＜表达式＞')'
    "printf" : "PRINTFTK",

    ＜因子＞    ::= ＜标识符＞｜＜标识符＞'['＜表达式＞']'|'('＜表达式＞')'｜＜整数＞|＜字符＞｜＜有返回值函数调用语句＞
    ＜项＞     ::= ＜因子＞{＜乘法运算符＞＜因子＞}
    ＜表达式＞    ::= ［＋｜－］＜项＞{＜加法运算符＞＜项＞}   //[+|-]只作用于第一个<项>
    ＜赋值语句＞   ::=  ＜标识符＞＝＜表达式＞|＜标识符＞'['＜表达式＞']'=＜表达式＞

	＜条件语句＞  ::= if '('＜条件＞')'＜语句＞［else＜语句>]
	"if" : "IFTK",
    "else" : "ELSETK",
    ＜条件＞    ::=  ＜表达式＞＜关系运算符＞＜表达式＞｜＜表达式＞    //整型表达式之间才能进行关系运算,表达式为整型，其值为0条件为假，值不为0时条件为真

    ＜循环语句＞   ::= do＜语句＞while '('＜条件＞')'
    "do" : "DOTK",
    ＜循环语句＞   ::=  while '('＜条件＞')'＜语句＞
    "while" : "WHILETK",
    ＜步长＞::= ＜无符号整数＞
    ＜循环语句＞   ::= for'('＜标识符＞＝＜表达式＞;＜条件＞;＜标识符＞＝＜标识符＞(+|-)＜步长＞')'＜语句＞
    "for" : "FORTK",

    ＜值参数表＞   ::= ＜表达式＞{,＜表达式＞}｜＜空＞
    ＜有返回值函数调用语句＞ ::= ＜标识符＞'('＜值参数表＞')'
    ＜无返回值函数调用语句＞ ::= ＜标识符＞'('＜值参数表＞')'

    ＜声明头部＞   ::=  int＜标识符＞ |char＜标识符＞
    ＜参数表＞    ::=  ＜类型标识符＞＜标识符＞{,＜类型标识符＞＜标识符＞}| ＜空＞
    ＜有返回值函数定义＞  ::=  ＜声明头部＞'('＜参数表＞')' '{'＜复合语句＞'}'
    ＜无返回值函数定义＞  ::= void＜标识符＞'('＜参数表＞')''{'＜复合语句＞'}'

    ＜语句＞    ::= ＜条件语句＞｜＜循环语句＞| '{'＜语句列＞'}'| ＜有返回值函数调用语句＞;|＜无返回值函数调用语句＞;｜＜赋值语句＞;｜＜读语句＞;｜＜写语句＞;｜＜空＞;|＜返回语句＞;
    ＜语句列＞   ::= ｛＜语句＞｝

    "void" : "VOIDTK",
    ＜复合语句＞   ::=  ［＜常量说明＞］［＜变量说明＞］＜语句列＞
    ＜主函数＞    ::= void main‘(’‘)’ ‘{’＜复合语句＞‘}’
    "main" : "MAINTK",
    ＜返回语句＞   ::=  return ['('＜表达式＞')']
    "return" : "RETURNTK",

    ＜程序＞    ::= ［＜常量说明＞］［＜变量说明＞］{＜有返回值函数定义＞|＜无返回值函数定义＞}＜主函数＞




